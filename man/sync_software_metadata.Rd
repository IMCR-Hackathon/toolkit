% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sync_software_metadata.R
\name{sync_software_metadata}
\alias{sync_software_metadata}
\title{Synchronize software with source metadata}
\usage{
sync_software_metadata(name)
}
\arguments{
\item{name}{(character) Software name(s). Use \code{name = "all_imcr_software"} 
to update all IMCR software metadata.}
}
\value{
(list) Updated software JSON for the specified \code{name} and added to 
  the \code{imcr_json} object in the global environment.
  (logical) Updated \code{imcr_json_mod_index} object in the global 
  environment, which indicates the specified \code{name} has been modified
  and is used by \code{put_software()}.
}
\description{
Uses two URLs listed in the intial, manually entered, OntoSoft metadata 
record. These are: (1.) The official archive in which the software is 
published (e.g. 
CRAN (https://cran.r-project.org/web/packages/codemetar/index.html), 
PyPI (https://pypi.org/project/certbot-dns-route53/)) listed under the 
OntoSoft object property \code{hasProjectWebsite} (i.e. in Portal Speak
\code{"Identify" > "Locate" > "Is there a project website for the software?"}), 
and (2.) The official location of where the software is being 
developmed/maintained (e.g. GitHub (https://github.com/ropensci/antiword)) 
listed under the OntoSoft object property \code{hasActiveDevelopment} (i.e. 
in Portal Speak \code{"Update" > "Contribute" > "How is the software being 
developed or maintained?"}). Software metadata is extracted from these 
two sources cross walked through the \code{codemetar} crosswalk  and used 
to update the content of the OntoSoft metadata record.
}
\examples{
\dontrun{

}

}
